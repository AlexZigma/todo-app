(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const d of i.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&o(d)}).observe(document,{childList:!0,subtree:!0});function e(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(s){if(s.ep)return;s.ep=!0;const i=e(s);fetch(s.href,i)}})();class n{constructor(t,e=!1){this.id=crypto.randomUUID(),this.text=t,this.isCompleted=e}}class r{storageKey="todo-storage";constructor(){this.inputTodoNewElement=document.getElementById("todo-new"),this.todoFormElement=document.getElementById("todo-form"),this.todoListElement=document.getElementById("todo-list"),this.todoCountElement=document.getElementById("todo-count"),this.clearCompletedButton=document.querySelector(".todo__clear-button"),this.filterListElement=document.querySelector(".filter"),this.completeAllButton=document.getElementById("completeAllButton"),this.filter="all",this.todoList=this.loadTodo(),this.bindEvents(),this.render()}render(){const t=this.filterItems();let e="";t.forEach(o=>{e+=this.getTemplate(o)}),this.todoListElement.innerHTML=e,this.updateCount(),this.updateClearButton()}getTemplate(t){return`<li class="todo__item todo-item card" data-id=${t.id}>
        <input class="todo-item__checkbox" 
          type="checkbox" 
          ${t.isCompleted?"checked":""}>
        <span class="todo-item__text">${t.text}</span>
        <button class="todo-item__delete-button" type="button"></button>
      </li>`}loadTodo(){const t=localStorage.getItem(this.storageKey);return t?JSON.parse(t).map(e=>new n(e.text,e.isCompleted)):[]}saveTodo(){localStorage.setItem(this.storageKey,JSON.stringify(this.todoList))}addTask(t){const e=new n(t);this.todoList.unshift(e),this.saveTodo(),this.render()}editTask(t,e){const o=this.getTask(t);o.text=e,this.saveTodo(),this.render()}getTask(t){return this.todoList.find(e=>e.id===t)}deleteTask(t){this.todoList=this.todoList.filter(e=>e.id!==t),this.saveTodo(),this.render()}setTaskCompleted(t,e){this.todoList.find(o=>o.id===t).isCompleted=e,this.saveTodo(),this.render()}completeAll(){const t=this.todoList.every(e=>e.isCompleted);this.todoList.forEach(e=>{e.isCompleted=!t}),this.saveTodo(),this.render()}clearCompleted(){this.todoList=this.todoList.filter(t=>!t.isCompleted),this.saveTodo(),this.render()}setFilter(t){this.filter=t,this.render()}filterItems(){let t=this.todoList;switch(this.filter){case"all":break;case"completed":t=t.filter(e=>e.isCompleted);break;case"active":t=t.filter(e=>!e.isCompleted);break}return t}updateClearButton(){const t=this.todoList.some(e=>e.isCompleted);this.clearCompletedButton.classList.toggle("hidden",!t)}updateCount(){const t=this.todoList.filter(e=>!e.isCompleted).length;this.todoCountElement.textContent=`${t} item${t===1?"":"s"} left`}onAddNewTask=t=>{t.preventDefault();const e=this.inputTodoNewElement.value;e.trim().length>0&&(this.addTask(e),this.inputTodoNewElement.value="")};onTodoClick=t=>{if(t.target.matches(".todo-item__delete-button")){const o=t.target.closest(".todo__item").dataset.id;this.deleteTask(o)}};onChangeTask=t=>{if(t.target.matches(".todo-item__checkbox")){const o=t.target.closest(".todo__item").dataset.id;this.setTaskCompleted(o,t.target.checked)}};onTodoDblClick=t=>{const e=t.target.closest(".todo__item");if(!e.querySelector(".todo-item__input")&&e){const o=document.createElement("input");o.classList.add("todo-item__input");const s=e.dataset.id,i=this.getTask(s);e.classList.add("todo-item--editing"),e.appendChild(o),o.value=i.text,o.focus(),o.addEventListener("change",d=>{o.value.trim().length===0?this.deleteTask(s):i.text=o.value,this.render()}),o.addEventListener("keydown",d=>{d.key==="Enter"&&o.blur()}),o.addEventListener("blur",d=>{e.classList.remove("todo-item--editing"),o.remove()})}};onClearCompleted=t=>{this.clearCompleted()};onCompleteAll=t=>{this.completeAll()};onFilterClick=t=>{const e=t.target.closest(".filter__button");if(!e)return;const o=t.currentTarget.querySelectorAll(".filter__button");for(let i of o)i.classList.remove("filter__button--selected");e.classList.add("filter__button--selected");const s=e.dataset.filter;this.setFilter(s)};bindEvents(){this.todoFormElement.addEventListener("submit",this.onAddNewTask),this.todoListElement.addEventListener("click",this.onTodoClick),this.todoListElement.addEventListener("change",this.onChangeTask),this.todoListElement.addEventListener("dblclick",this.onTodoDblClick),this.clearCompletedButton.addEventListener("click",this.onClearCompleted),this.completeAllButton.addEventListener("click",this.onCompleteAll),this.filterListElement.addEventListener("click",this.onFilterClick)}}new r;
