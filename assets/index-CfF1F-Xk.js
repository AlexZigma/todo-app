(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const d of n.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&r(d)}).observe(document,{childList:!0,subtree:!0});function l(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(o){if(o.ep)return;o.ep=!0;const n=l(o);fetch(o.href,n)}})();const s=document.getElementById("todo-new"),m=document.getElementById("todo-form"),a=document.getElementById("todo-list"),f=document.getElementById("todo-count"),p=document.querySelector(".todo__button-clear"),h=document.getElementById("filterButtonAll"),L=document.getElementById("filterButtonActive"),v=document.getElementById("filterButtonCompleted"),E=document.getElementById("completeAllButton"),i={todoList:[new c("1"),new c("2")],filter:"all",render(){a.innerHTML="";let e=this.todoList;switch(this.filter){case"all":break;case"completed":e=e.filter(t=>t.isCompleted);break;case"active":e=e.filter(t=>!t.isCompleted);break}e.forEach(t=>{const l=document.createElement("li");l.classList.add("todo__element"),l.innerHTML=`
        <div class="card">
          <input class="card__checkbox" type="checkbox" name="" id=""
          ${t.isChecked?"checked":""}>
          <span class="card__text">${t.text}</span>
          <button class="card__button-remove" type="button""></button>
        </div>
        `;const r=l.querySelector(".card__button-remove"),o=l.querySelector(".card__checkbox");r.addEventListener("click",n=>this.deleteTask(t.id)),o.checked=t.isCompleted,o.addEventListener("change",n=>{this.todoList.find(d=>d.id===t.id).isCompleted=o.checked}),a.appendChild(l)}),f.textContent=this.todoList.length},deleteTask(e){this.todoList=this.todoList.filter(t=>t.id!==e),this.render()},addTask(){if(s.value){const e=new c(s.value);this.todoList.push(e),s.value="",this.render()}},clearCompleted(){this.todoList=this.todoList.filter(e=>!e.isCompleted),this.render()},completeAll(){const e=this.todoList.every(t=>t.isCompleted);this.todoList.map(t=>{t.isCompleted=!e}),this.render()}};m.addEventListener("submit",e=>{e.preventDefault(),i.addTask()});p.addEventListener("click",e=>{i.clearCompleted()});const u=document.querySelectorAll(".filter-button");for(let e of u)e.addEventListener("click",()=>{u.forEach(t=>t.classList.remove("filter-button--selected")),e.classList.add("filter-button--selected")});E.addEventListener("click",e=>{i.completeAll()});h.addEventListener("click",e=>{i.filter="all",i.render()});L.addEventListener("click",e=>{i.filter="active",i.render()});v.addEventListener("click",e=>{i.filter="completed",i.render()});i.render();function c(e,t){this.id=crypto.randomUUID(),this.text=e,this.isCompleted=!1}
