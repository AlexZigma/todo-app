(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&o(n)}).observe(document,{childList:!0,subtree:!0});function e(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(s){if(s.ep)return;s.ep=!0;const i=e(s);fetch(s.href,i)}})();class d{constructor(t,e=!1,o=crypto.randomUUID()){this.text=t,this.id=o,this.isCompleted=e}toggle(){this.isCompleted=!this.isCompleted}}class r{storageKey="todo-storage";constructor(){this.newTaskInput=document.getElementById("todo-new"),this.todoForm=document.getElementById("todo-form"),this.todoListElement=document.getElementById("todo-list"),this.todoCountElement=document.getElementById("todo-count"),this.todoActionsElement=document.querySelector(".todo__actions"),this.clearCompletedButton=document.querySelector(".todo__clear-button"),this.filterListElement=document.querySelector(".filter"),this.completeAllButton=document.getElementById("completeAllButton"),this.filter="all",this.todoList=this.loadTodo(),this.bindEvents(),this.render()}render(t=!0){if(this.updateCount(),this.updateClearButton(),this.updateActions(),!t)return;const e=this.filterItems(),o=[];e.forEach(s=>{o.push(this.getTemplate(s))}),this.todoListElement.replaceChildren(...o)}getTemplate(t){const e=document.createElement("li");e.classList.add("todo__item","todo-item","card"),e.dataset.id=t.id;const o=document.createElement("input");o.classList.add("todo-item__checkbox"),o.type="checkbox",o.checked=t.isCompleted;const s=document.createElement("span");s.classList.add("todo-item__text"),s.textContent=t.text;const i=document.createElement("button");return i.classList.add("todo-item__delete-button"),i.type="button",e.append(o,s,i),e}loadTodo(){const t=localStorage.getItem(this.storageKey);if(t)try{return JSON.parse(t).map(e=>new d(e.text,e.isCompleted,e.id))}catch(e){return console.error("error while load from storage",e),[]}return[]}saveTodo(){localStorage.setItem(this.storageKey,JSON.stringify(this.todoList))}update(t=!0){this.saveTodo(),this.render(t)}addTask(t){const e=new d(t.trim());this.todoList.unshift(e),this.update()}editTask(t,e){const o=this.getTask(t);o.text=e.trim(),this.update(!1)}getTask(t){return this.todoList.find(e=>e.id===t)}deleteTask(t){this.todoList=this.todoList.filter(e=>e.id!==t),this.update()}toggleTask(t){this.todoList.find(o=>o.id===t).toggle(),this.update(this.filter!=="all")}toggleAll(){const t=this.todoList.every(e=>e.isCompleted);this.todoList.forEach(e=>{e.isCompleted=!t}),this.update()}clearCompleted(){this.todoList=this.todoList.filter(t=>!t.isCompleted),this.update()}setFilter(t){this.filter=t,this.render()}filterItems(){switch(this.filter){case"active":return this.todoList.filter(t=>!t.isCompleted);case"completed":return this.todoList.filter(t=>t.isCompleted);default:return this.todoList}}updateClearButton(){const t=this.todoList.some(e=>e.isCompleted);this.clearCompletedButton.classList.toggle("hidden",!t)}updateCount(){const t=this.todoList.filter(e=>!e.isCompleted).length;this.todoCountElement.textContent=`${t} ${t===1?"item":"items"} left`}updateActions(){const t=this.todoList.length;this.todoActionsElement.classList.toggle("hidden",t===0),this.completeAllButton.classList.toggle("hidden",t===0)}onNewTaskSubmit=t=>{t.preventDefault(),this.handleNewTask()};onNewTaskBlur=()=>{this.handleNewTask()};handleNewTask(){const t=this.newTaskInput.value;t.trim().length>0&&(this.addTask(t),this.newTaskInput.value="")}onTodoClick=t=>{if(t.target.matches(".todo-item__delete-button")){const o=t.target.closest(".todo__item").dataset.id;this.deleteTask(o)}};onChangeTask=t=>{if(t.target.matches(".todo-item__checkbox")){const o=t.target.closest(".todo__item").dataset.id;this.toggleTask(o)}};onTodoDblClick=t=>{const e=t.target.closest(".todo__item");if(!e||e.querySelector(".todo-item__input")||t.target.matches(".todo-item__checkbox"))return;const o=e.dataset.id,s=this.getTask(o);this.startEditingTask(e,s)};startEditingTask(t,e){const o=document.createElement("input");o.classList.add("todo-item__input"),o.value=e.text,t.classList.add("todo-item--editing"),t.appendChild(o),o.focus(),o.addEventListener("blur",()=>{if(o.value.trim().length===0)this.deleteTask(e.id);else{this.editTask(e.id,o.value);const s=t.querySelector("span");s.textContent=o.value,o.remove(),t.classList.remove("todo-item--editing")}}),o.addEventListener("keydown",s=>{["Enter"].includes(s.key)&&o.blur(),["Escape"].includes(s.key)&&(o.value=e.text,o.blur())})}onClickClearCompleted=()=>{this.clearCompleted()};onClickToggleAll=()=>{this.toggleAll()};onFilterClick=t=>{const e=t.target.closest(".filter__button");if(!e)return;t.currentTarget.querySelectorAll(".filter__button").forEach(i=>{i.classList.remove("filter__button--selected")}),e.classList.add("filter__button--selected");const s=e.dataset.filter;this.setFilter(s)};bindEvents(){this.todoForm.addEventListener("submit",this.onNewTaskSubmit),this.newTaskInput.addEventListener("blur",this.onNewTaskBlur),this.todoListElement.addEventListener("click",this.onTodoClick),this.todoListElement.addEventListener("change",this.onChangeTask),this.todoListElement.addEventListener("dblclick",this.onTodoDblClick),this.clearCompletedButton.addEventListener("click",this.onClickClearCompleted),this.completeAllButton.addEventListener("click",this.onClickToggleAll),this.filterListElement.addEventListener("click",this.onFilterClick)}}new r;
